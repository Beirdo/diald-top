dnl Process this file with autoconf to produce a configure script.
AC_INIT(client/diald-top.c)

dnl define the Auxiliary dir for scripts and stuff
AC_CONFIG_AUX_DIR(scripts)

AC_PROG_AWK

dnl check host type
AC_CANONICAL_SYSTEM


dnl check package version - formatted like: 2.1pl4
AC_MSG_CHECKING(version of the package)
if test -f .version ; then
  VERSION=`cat .version`
else
  VERSION="0.0pl0"
fi
changequote(<<, >>)dnl
VERSIONMAJOR=`echo $VERSION | $AWK 'BEGIN {FS="[.pl]"} {printf("%d", $1)}'`
VERSIONMINOR=`echo $VERSION | $AWK 'BEGIN {FS="[.pl]"} {printf("%d", $2)}'`
VERSIONPATCH=`echo $VERSION | $AWK 'BEGIN {FS="[.pl]"} {printf("pl%d", $4)}'`
changequote([, ])dnl
if test "${VERSIONPATCH}" = "pl0" ; then
  VERSIONPATCH=
fi
VERSION="${VERSIONMAJOR}.${VERSIONMINOR}${VERSIONPATCH}"

AC_MSG_RESULT(${VERSION})
if test "${VERSION}" = "0.0pl0" ; then
  AC_MSG_ERROR([Package version number not defined])
fi
AC_SUBST(VERSION)
AC_SUBST(VERSIONMAJOR)
AC_SUBST(VERSIONMINOR)
AC_SUBST(VERSIONPATCH)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC

AC_DEFUN(GJH_REQUIRE_PROG,
[if test "$1" != "$2";  then
  AC_MSG_ERROR([Cannot find required program $2.])
 fi
])

GJH_REQUIRE_PROG($LEX, flex)
GJH_REQUIRE_PROG($YACC, bison -y)

AC_LANG_C
AC_C_CONST

dnl Check for obstacks
AC_CACHE_CHECK([for obstacks in libc], am_cv_func_obstack,
 [AC_TRY_LINK([#include "obstack.h"],
            [struct obstack *mem; obstack_free(mem, (char *)0);],
            am_cv_func_obstack=yes,
            am_cv_func_obstack=no)])

if test $am_cv_func_obstack = yes; then
  AC_DEFINE(HAVE_OBSTACK,1,[Define if libc has obstacks])
fi


dnl YYDEBUG enable option
AC_CACHE_CHECK([if YYDEBUG is configured to be enabled], ac_cv_option_yydebug,
 [AC_ARG_ENABLE(yydebug,[  --disable-yydebug       Shut off the YACC debugging capability])
  if test "$enable_yydebug" = "no"; then
    ac_cv_option_yydebug=no
  else
    ac_cv_option_yydebug=yes
  fi])

if test "$ac_cv_option_yydebug" = "no"; then
  AC_DEFINE(YYDEBUG, 0)
else
  AC_DEFINE(YYDEBUG, 1)
fi


dnl Control FIFO settings
default_ctl_fifo=/var/run/diald.ctl
AC_CACHE_CHECK([the diald control FIFO filename], 
 ac_cv_option_ctl_fifo,
 [AC_ARG_WITH(ctl-fifo,[  --with-ctl-fifo=FIFO    Set the diald control FIFO pipe filename to \"FIFO\"
                           [/var/run/diald.ctl]])
  if test "x$with_ctl_fifo" = "x"; then 
    ac_cv_option_ctl_fifo=$default_ctl_fifo
  else
    ac_cv_option_ctl_fifo=$with_ctl_fifo
  fi
])

AC_DEFINE_UNQUOTED(CONTROL_FIFO, "$ac_cv_option_ctl_fifo",
		   [Define the diald control FIFO filename])
CONTROL_FIFO=$ac_cv_option_ctl_fifo
AC_SUBST(CONTROL_FIFO)


dnl Conf file settings
default_conffile=/etc/diald-top.conf
AC_CACHE_CHECK([the diald-top config file filename], 
 ac_cv_option_ctl_conffile,
 [AC_ARG_WITH(conffile,[  --with-conffile=FILE    Set the diald-top config file filename to \"FILE\"
                           [/etc/diald-top.conf]])
  if test "x$with_ctl_conffile" = "x"; then 
    ac_cv_option_ctl_conffile=$default_conffile
  else
    ac_cv_option_ctl_conffile=$with_ctl_conffile
  fi
])

AC_DEFINE_UNQUOTED(CONF_FILE, "$ac_cv_option_ctl_conffile",
		   [Define the diald-top config file filename])
CONF_FILE=$ac_cv_option_ctl_conffile
AC_SUBST(CONF_FILE)


dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(ncurses.h fcntl.h limits.h malloc.h sys/time.h syslog.h unistd.h)
AC_CONFIG_HEADER(config.h)

dnl Checks for libraries.
dnl AC_CHECK_LIB(fl, main)
AC_CHECK_LIB(ncurses, printw)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_HEADER_TIME

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(select socket strdup strstr)
AC_CHECK_FUNCS(gethostbyaddr getservbyport getdomainname)

AC_MINGW32
AC_EXEEXT
AC_OBJEXT

AC_OUTPUT(Makefile Makefile.def server/Makefile client/Makefile client/version.h)
